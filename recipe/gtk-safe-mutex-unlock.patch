diff --git a/modules/highgui/src/window_gtk.cpp b/modules/highgui/src/window_gtk.cpp
index c722165..7c6813f 100644
--- a/modules/highgui/src/window_gtk.cpp
+++ b/modules/highgui/src/window_gtk.cpp
@@ -1981,6 +1981,25 @@ CV_IMPL int cvWaitKey( int delay )
         gboolean expired;
         int my_last_key;
 
+        /*
+        Make sure that the mutex is locked.
+
+        While before it led to unspecified behavior, trying to unlock a not locked mutex 
+        (which leads to unspecified behaviour on pthread) results on SIGABR on newer 
+        glib(2) versions.
+        See e.g.
+          https://bugzilla.gnome.org/show_bug.cgi?id=735428
+        And the proposed related general solution that made it to gdk:
+          https://mail.gnome.org/archives/commits-list/2014-August/msg08239.html
+
+        We were hitting this when calling "startWindowThread" before calling cvWaitKey on a
+        different python thread, while using gtk2 backend on more recent glib.
+        In our case the offending line was:
+            g_cond_wait(cond_have_key, last_key_mutex);
+        This call should fix the race and prove inocuous in any other case.
+        */
+        g_mutex_trylock(last_key_mutex);
+
         // wait for signal or timeout if delay > 0
         if(delay>0){
             GTimeVal timer;
