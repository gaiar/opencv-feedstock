# Find our git repo: https://github.com/loopbio/opencv-feedstock

{% set version = "3.1.0" %}

package:
  name: opencv
  version: {{ version }}

source:
  fn: opencv-{{ version }}.tar.gz
  url: https://github.com/opencv/opencv/archive/{{ version }}.tar.gz
  sha256: f00b3c4f42acda07d89031a2ebb5ebe390764a133502c03a511f67b78bbd4fbf
  patches:
    # Safe mutex unlocking for loopb's KeyThread
    - gtk-safe-mutex-unlock.patch

build:
  number: 1
  skip: true  # [not (linux and py2k and np==111)]
  features:
    - ffmpeg
    - gtk2

requirements:
  build:
    - python
    - toolchain
    # For sha256 comparisons of opencv_contrib
    - openssl 1.0.*         # [unix]
    # For downloading opencv_contrib
    - curl
    # For applying patches
    - cmake
    - numpy x.x
    - hdf5 1.8.17|1.8.17.*  # [unix]
    - eigen 3.*
    - jasper                # [unix]
    - zlib 1.2.*
    - jpeg 9*
    - libtiff 4.0.*
    - libpng >=1.6.21,<1.7
    # Uncomment this to compile with gtk2.
    # Not in default or conda-forge, so need a channel before rerendering (best in anaconda.org is "mw" ATM)
    # This is at the moment a hack to allow *building* using newer gtk2 + libpng
    # Needed as the centos gtk does not play well with conda-forge libpng
    - gtk2

    # ffmpeg support (from conda-forge)
    - ffmpeg

  run:
    - python
    - numpy x.x
    - hdf5 1.8.17|1.8.17.*  # [unix]
    - jasper                # [unix]
    - zlib 1.2.*
    - jpeg 9*
    - libtiff 4.0.*
    - libpng >=1.6.21,<1.7
    # GTK2
    # In general, we won't need this at runtime as long as system gtk2 is installed
    - loopbio-gtk2
    - gtk2
    # FFMPEG
    - loopbio-ffmpeg
    - ffmpeg

test:
    imports:
      - cv2
      - cv2.xfeatures2d

    commands:
        # Verify dynamic libraries.
        # "bioinspired", Not working in 3.1.0
        # TODO Santi: add here the other libraries built for ffmpeg and gtk
        {% set opencv_libs = [
             "xfeatures2d",
             "ximgproc",
             "xobjdetect",
             "xphoto",
             "aruco",
             "bgsegm",
             "calib3d",
             "ccalib",
             "core",
             "datasets",
             "dnn",
             "dpm",
             "face",
             "features2d",
             "flann",
             "fuzzy",
             "highgui",
             "imgcodecs",
             "imgproc",
             "line_descriptor",
             "ml",
             "objdetect",
             "optflow",
             "photo",
             "plot",
             "reg",
             "rgbd",
             "saliency",
             "shape",
             "stereo",
             "stitching",
             "structured_light",
             "superres",
             "surface_matching",
             "text",
             "tracking",
             "video",
             "videoio",
             "videostab"
        ] %}
        {% for each_opencv_lib in opencv_libs %}
        - test -f $PREFIX/lib/libopencv_{{ each_opencv_lib }}.so                           # [linux]
        {% endfor %}

about:
  home: http://opencv.org/
  license: BSD 3-clause
  summary: Computer vision and machine learning software library.

extra:
  original-recipe-url: https://github.com/conda-forge/opencv-feedstock/tree/c8d7e0bea4c7c298a13b339d81088f0f564becf4
  original-recipe-maintainers:
    - jakirkham
    - msarahan
    - patricksnape
  recipe-maintainers:
    - sdvillal


#
# We could switch to qt, which is maintained (albeit with some problems at the time of writing)
# in the conda/conda-forge ecosystem. However, loopb event thread (and possibly other stuff)
# does not work with qt at the moment, even if only using opencv higui.
#
